name: test bot

on:
  workflow_dispatch:

jobs:
  test-bot:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸš€Build app
        id: build-app
        run: |
          APPLICATION_ARCHIVE_URL=https://expo.dev/artifacts/eas/qvfGmCp8mZFeLCmgyVrHzV.apk
          echo "Application Archive URL: $APPLICATION_ARCHIVE_URL"
          
          echo "{APPLICATION_ARCHIVE_URL}={$APPLICATION_ARCHIVE_URL}" >> "$GITHUB_OUTPUT"

      - name: ðŸŽ†Generate QR Code
        id: generate-qrcode
        env:
          APPLICATION_ARCHIVE_URL: ${{ steps.build-app.outputs.APPLICATION_ARCHIVE_URL }}
        run: |
          sudo apt-get install -y qrencode
          qrencode -o qrcode.png "${APPLICATION_ARCHIVE_URL}"
          BASE64_QR=$(base64 -w 0 qrcode.png)
          MD5_QR=$(md5sum qrcode.png | awk '{ print $1 }')
          
          echo "{BASE64_QR}={$BASE64_QR}" >> "$GITHUB_OUTPUT"
          echo "{MD5_QR}={$MD5_QR}" >> "$GITHUB_OUTPUT"

      - name: ðŸ¤–IM Notification
        env:
          APPLICATION_ARCHIVE_URL: ${{ steps.build-app.outputs.APPLICATION_ARCHIVE_URL }}
          BASE64_QR: ${{ steps.generate-qrcode.outputs.BASE64_QR }}
          MD5_QR: ${{ steps.generate-qrcode.outputs.MD5_QR }}
        run: |
          curl -n "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=b7286634-6021-483d-8a0e-0cf2e584e95d" \
            --header 'Content-Type: application/json' \
            --data '{"msgtype":"text","text": {"content":"Visit Link App Build Success : $APPLICATION_ARCHIVE_URL"}}'
          curl -n "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=b7286634-6021-483d-8a0e-0cf2e584e95d" \
            --header 'Content-Type: application/json' \
            --data '{"msgtype":"image","image":{"base64":"$BASE64_QR","md5":"$MD5_QR"}}'
